#version 430 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoords;
layout (location = 3) in vec4 boneIds;
layout (location = 4) in vec4 boneWeights;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

const uint MAX_BONE_INFLUECE = 4;
const uint MAX_BONES = 100;
uniform mat4 bone_transforms[MAX_BONES];

out vec2 inTexCoords;
out vec3 inNormal;
out vec3 inFragPos;

void main()
{
  mat4 boneTransform = mat4(0.0);
  for(uint i = 0; i < MAX_BONE_INFLUECE; i++)
    boneTransform += bone_transforms[uint(boneIds[i])] * boneWeights[i];

  vec4 pos = boneTransform * vec4(position, 1.0);

  inTexCoords = texCoords;

  inNormal = mat3(transpose(inverse(model * boneTransform))) * normal;

  inFragPos = vec3(model * pos);

  gl_Position = projection * view * model * pos;
}
